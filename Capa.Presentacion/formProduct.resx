<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimeSumulate.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelSourseProducts.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABCMAAAIJCAYAAACfqPeiAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAEr9JREFUeF7t3dtSHIcVhtG8/wMmsiwJcQadkO3kusNmaNFSJjHY8hc0tVbVdz3N
        5f6rZ/jbr7/9a5EkSZIkSaoyRkiSJEmSpDRjhCRJkiRJSjNGSJIkSZKkNGOEJEmSJElKM0ZIkiRJkqQ0
        Y4QkSZIkSUozRkiSJEmSpDRjhCRJkiRJSjNGSJIkSZKktD89Rvzy6z8lSZIkSdIBtm8H+B79oTFi3wNK
        kiRJkqTDbd8+8Ed70hix72E+//KbJEmSJEk6wPbtAPv2gqf26DFi+8HbB7v5/OtXfbr5RZIkSZIk/YB9
        e+Nv7//tLrBvN3hKjxojth/47QixPvDHT5+/6sPH6UaSJEmSJD3rvr7np2/Hie89SPzuGLH9oN0IsRsi
        tgPEPPz7D9Onu969nz5KkiRJkqQfot09v2s3UmyHid0o8f0GiUePEfuGiN0IsRsert99uOvq+v2XLq8k
        SZIkSdJzbnvHr7f93Plz76+jxH8bJPbtCI/pf44R2yFiN0bshoh5hWM7QuyGh3fLxeX1cn4xXe06v1rO
        JEmSJEnSs2zu9i83/O09P3f93PfrMPEwSjwMEutG8GcGiUePEds3ItYhYh0h5oHPzi+X07PbTi+Wk9Pz
        XSfny7EkSZIkSXqWzd2+3vBzz89dP/f93PnrKLEOEts3JNIxYv1qxjpEXFzOEHG1AAAAAIdl7v25+9dB
        Yv3Kxl86Rnw7RGzfiphXNXZvRFwtp2cX948JAAAAHIq59+fun/t/doDv+XbEk8aI7VsR88rGPNjxydn9
        YwIAAACHYu793SBx/dXbEekYsXsr4ubLWxHzHZL5TsnR29P7xwQAAAAOxdz7c/fP/f/wdsT3+arGE8eI
        3Vc05tc150ctjo/PljdHx/ePCQAAAByKuffn7p/7f3aA7Vc1kjFi+3sRX76icXqxvD0+XV6/eXv/mAAA
        AMChmHt/7v65/9evamx/NyIbI969X8eIq/uvaJwsr14bIwAAAODQzL0/d//c/7MD7H43Ih4jPnycMWL9
        8crtGHF0/5gAAADAoZh7/z/HiPkRy3SM2P0njcur98v5+dVycnK+HB0ZIwAAAOAQ3Y0Rt3f/3P+zA8we
        sP2PGvkYcXb7EMe3D/Pm9qF+fmWMAAAAgEMz9/7c/XP/zw5gjAAAAAD+UsYIAAAAIGWMAAAAAFLGCAAA
        ACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAA
        UsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBl
        jAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYI
        AAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAA
        AABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAA
        IGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABS
        xggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWM
        AAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggA
        AAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAA
        AFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAg
        ZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLG
        CAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwA
        AAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAA
        ACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAA
        UsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBl
        jAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYI
        AAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAA
        AABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAA
        IGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABS
        xggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWM
        AAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggA
        AAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAA
        AFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAg
        ZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLG
        CAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwA
        AAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAA
        ACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAA
        UsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBl
        jAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYI
        AAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAA
        AABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAA
        IGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABS
        xggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWM
        AAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggA
        AAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAA
        AFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAg
        ZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLG
        CAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwA
        AAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAA
        ACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAA
        UsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBl
        jAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYI
        AAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAA
        AABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAA
        IGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABS
        xggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWM
        AAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggA
        AAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAA
        AFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAg
        ZYwAAAAAUsYIAAAAIGWMAAAAAFLGCAAAACBljAAAAABSxggAAAAgZYwAAAAAUsYIAAAAIGWMAAAAAFLG
        CAAAACD17MaI89uHOLl9mKPbh3r12hgBAAAAh2bu/bn75/6fHeD/NEZ8vvvQq+v3y/nF1XJyer4cvTVG
        AAAAwCG6GyNu7/65/2cHmD1gN0Z87saIj59mjPi0Z4x4e/+YAAAAwKGYe/8/x4hPd/tAOka8/7COEdfL
        6enF8vb4dHn9xhgBAAAAh2bu/bn75/6fHWD2gNkFsjHi5vOvX8aI63cflovL6+X07HI5Pj5b3hwd3z8m
        AAAAcCjm3p+7f+7/2QFmD1jHiNkJwjHi5u7DL6/eLWfnl/df1di9HfHzqzfLy5evlxc/vVpevPh5+ceL
        l7v+8XL5uyRJkiRJelbNvb7e7nPHzz0/d/3c93Pnz70/d//c/7MD7MaIm3aMmFcw1v+o8eWrGmcXy/HJ
        2d13SOZBX706Wl7+/Oa218tPt3/ATy9fSZIkSZKkZ93ruzt+7vm563dDxPxLz3kr4uErGtv/pJGOEduv
        aswqMj9g8TBInN69wnE3Sryeju6a/0sqSZIkSZKeX+vtPnf83PNz1899/zBEzL/0XN+KePi9iL9sjJi+
        HSTmQ7dvR1xcPgwS8+rGfJdkftxiFpS7jk5u/xBJkiRJkvQcm7t9veHnnp+7fu77dYiYu3/7VsT3+IrG
        9KQxYvt2xDpI7N6QuL77Dsn8qMX8yuY8+F0n58uxJEmSJEl6ls3dvt7wc8/PXT/3/dz5c++vQ8T3fCti
        evQYsR0kPnx8GCTmVY11lJhf15wHnvXkrvOr2z9CkiRJkiQ9x+Zu/3LD397zc9evI8Tc++sQMTvAdoj4
        S8eIaTtI3Hz++g2JeUVjO0qsw8Ta5ZUkSZIkSXrObe/49bZ/GCF2X81Yh4jZBf7sEDE9eoz4b4PEwyix
        GyZ248RuoJAkSZIkST9Cu3t+182XEeJ/DRHTvh3hMf3uGDFtP2g+eDdKzIPsRontMLE2r3DMw0uSJEmS
        pOfc1/f8tN766+2/bgHbfWDffvDYHjVGTNsPXB9iO0qsrQ8sSZIkSZJ+rL698bf3/3YX2LcbPKVHjxHT
        9oPXtg8mSZIkSZIOp307wL694Kk9aYxY2/cwkiRJkiTpcNu3D/zR/tAYsW3fA0qSJEmSpB+/fTvA9+hP
        jxGSJEmSJElPyRghSZIkSZLSjBGSJEmSJCnNGCFJkiRJktKMEZIkSZIkKc0YIUmSJEmS0owRkiRJkiQp
        zRghSZIkSZLC/rX8G5tFUysWSWqsAAAAAElFTkSuQmCC
</value>
  </data>
</root>